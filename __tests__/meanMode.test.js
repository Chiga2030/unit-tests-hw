const meanMode = require('../meanMode');

/**
* Классы эквивалентности:
* Класс 1: Пустой массив возвращает false.
* Класс 2: Любое кол-во одинаковых чисел в среднем 
* равно этому числу.
* Класс 3: Упорядоченные ряды чисел всегда будут 
* возвращать false
* Класс 4: Если в массиве есть более одной группы 
* одинаковых чисел, равных по длинне, то в ответ 
* получаем false.
* Класс 5: Если в массиве есть только одна группа 
* одинаковых чисел с наибольшей длинной, а значение 
* числа совпадает со средним значением массива, то в 
* ответ поличаем true.
* Класс 6: В остальных случаях ожидаем false. То есть 
* при только одной группе одинаковых чисел с 
* наибольшей длинной, но значение числа которой не 
* совпадает со средним значением массива.
*/

describe('Проверим 1 класс эквивалентности, проверим 2 массива, один из которых пустой', () => {
	test('Проверка пустого массива - ожидаем false', () => {
		const value1 = [];
		expect(meanMode(value1)).toBeFalsy();
	});
	test('Проверка не пустого массива - ожидаем true', () => {
		const value2 = [1];
		expect(meanMode(value2)).toBeTruthy();
	});
});

describe('Проверим 2 класс эквивалентности, заполнив массив одинаковыми значениями, в ответ ожидаем true (Любое кол-во одинаковых чисел в среднем равно этому числу)', () => {
	test('Проверка значений < 0', () => {
		const value1 = [-25, -25, -25, -25];
		expect(meanMode(value1)).toBeTruthy();
	});
	test('Проверка значений = 0', () => {
		const value2 = [0, 0, 0, 0, 0];
		expect(meanMode(value2)).toBeTruthy();
	});
	test('Проверка значений > 0', () => {
		const value3 = [45, 45, 45, 45, 45];
		expect(meanMode(value3)).toBeTruthy();
	});
});

describe('Проверим 3 класс эквивалентности, заполним массив упорядоченными рядами чисел (Упорядоченные ряды чисел всегда будут возвращать false)', () => {
	test('Нет 2х и более одинаковых чисел в массиве, следовательно ожидаем false', () => {
		const value1 = [-6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5];
		expect(meanMode(value1)).toBeFalsy();
	});
	test('Нет 2х и более одинаковых чисел в массиве, следовательно ожидаем false', () => {
		const value2 = [0, -1, -2, -3, -4, -5];
		expect(meanMode(value2)).toBeFalsy();
	});
	test('Нет 2х и более одинаковых чисел в массиве, следовательно ожидаем false', () => {
		const value3 = [11, 12, 13, 14, 15];
		expect(meanMode(value3)).toBeFalsy();
	});
});

describe('Проверим 4 класс эквивалентности, в массиве есть 2 и более групп одинаковых чисел равных по длине, в ответ ожидаем false', () => {
	test('В массиве 2 группы одинаковых чисел, равные по длинне, следовательно ожидаем false', () => {
		const value1 = [1, 1, 1, 2, 2, 2, 0, 3, 6, 8, 4, 5];
		expect(meanMode(value1)).toBeFalsy();
	});
	test('В массиве 3 группы одинаковых чисел, равные по длинне, следовательно ожидаем false', () => {
		const value2 = [12, 12, 13, 13, 14, 14, 6, 7, 8];
		expect(meanMode(value2)).toBeFalsy();
	});
	test('В массиве 3 группы одинаковых чисел, равные по длинне, следовательно ожидаем false', () => {
		const value3 = [22, 22, 22, 23, 23, 23, 24, 24, 24];
		expect(meanMode(value3)).toBeFalsy();
	});
});

describe('Проверим 5 класс эквивалентности, в массиве есть только 1 группа одинаковых чисел с наибольшей длинной, в ответ ожидаем true', () => {
	test('Средняя по массиву равна значению числа самой длинной группы в массиве', () => {
		const value1 = [1, 1, 1, 2, 5, 0, 0, 3, -2, -1];
		expect(meanMode(value1)).toBeTruthy();
	});
	test('Средняя по массиву равна значению числа самой длинной группы в массиве', () => {
		const value2 = [1, 1, 2, 3, 4, 4, 5, 5, 5, 20];
		expect(meanMode(value2)).toBeTruthy();
	});
	test('Средняя по массиву равна значению числа самой длинной группы в массиве', () => {
		const value3 = [1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 5, 5, 5];
		expect(meanMode(value3)).toBeTruthy();
	});
});

describe('Проверим 6 класс эквивалентности, в массиве есть только 1 группа одинаковых чисел с наибольшей длинной, но не равной среднему значению по массиву, в ответ ожидаем false', () => {
	test('Средняя по массиву не равна значению числа самой длинной группы в массиве', () => {
		const value1 = [1, 1, 1, 2, 5, 0, 0, 3, -2, 10];
		expect(meanMode(value1)).toBeFalsy();
	});
	test('Средняя по массиву не равна значению числа самой длинной группы в массиве', () => {
		const value2 = [1, 1, 2, 3, 4, 4, 5, 5, 5, 40];
		expect(meanMode(value2)).toBeFalsy();
	});
	test('Средняя по массиву не равна значению числа самой длинной группы в массиве', () => {
		const value3 = [1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 5, 5, 10];
		expect(meanMode(value3)).toBeFalsy();
	});
});
